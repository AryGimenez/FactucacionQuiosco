//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Dom_Class_Cotisacion.java
//  @ Date : 06/05/2010
//  @ Author : 
//
//



package Logica_Negocio.Dominio;

import Logica_Negocio.LogN_Inter_Duplicado;
import java.util.Date;


public class Dom_Class_Cotisacion  implements LogN_Inter_Duplicado<Dom_Class_Cotisacion> {
    // Atributos _______________________________________________________________
    /**
     * Valor de venta
     */
    private float mVent;
    /**
     * Valor de compra
     */
    private float mCom;


    /**
     * Fecha de fin de Cotización
     */
    private Date mFechMod;
    
    // Constructor______________________________________________________________

    public Dom_Class_Cotisacion(float mVent, float mCom) {
        this(mVent, mCom, new Date());
    }

    
    
    public Dom_Class_Cotisacion(float mVent, float mCom, Date mFechMod) {
        this.mVent = mVent;
        this.mCom = mCom;
        this.mFechMod = mFechMod;
    }
    
    public Dom_Class_Cotisacion (Dom_Class_Cotisacion xObjCot){
        this(xObjCot.mVent, xObjCot.mCom, xObjCot.mFechMod);
    }
    
    
    
    //Metodos________________________________________________________________

    /**
     * Retorna valor de venta
     * @return Valor de venta
     */
    public float getVenta() {
        return mVent;
    }

    /**
     * Retorna valor de venta
     * @param mVent Valor de la venta por la cual se va a remplazar
     * @return True si el valor pasado por parámetro es positivo false en caso contrario
     */
    public boolean setVenta(float mVent) {
        if (mVent < 0) return false;
        this.mVent = mVent; return true;
    }

    /**
     * Retorna el valor de compra
     * @return mCom valor de compra
     */
    public float getCompra() {
        return this.mCom;
    }

    /**
     * Remplaza el valor de compra
     * @param mCom Valor de compra por el cual se va a remplazar
     * @return True si el valor pasado por parámetro es positivo false en caso
     * contario
     */
    public boolean setCompra(float mCom) {
        if (mCom < 0) return false;
        this.mCom = mCom; return true;
    }
    
    public Date getmFechMod() {
        return mFechMod;
    }

    public void setmFechMod(Date mFechMod) {
        this.mFechMod = mFechMod;
    }

    @Override
    public Dom_Class_Cotisacion duplicar() {
        return new Dom_Class_Cotisacion(this);
    }

    @Override
    public boolean duplicado(Dom_Class_Cotisacion xObjCop) {
        if (this == xObjCop) return true;
                
        if (mCom != xObjCop.mCom) return false;
        if (!mFechMod.equals(xObjCop.mFechMod)) return false;
        if (mVent != xObjCop.mVent) return false;
        
        return true;
    }


   
}
